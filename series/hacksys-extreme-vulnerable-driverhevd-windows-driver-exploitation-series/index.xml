<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hacksys Extreme Vulnerable Driver(HEVD) Windows Driver Exploitation Series on Lamprey Labs</title>
    <link>https://lampreylabs.com/series/hacksys-extreme-vulnerable-driverhevd-windows-driver-exploitation-series/</link>
    <description>Recent content in Hacksys Extreme Vulnerable Driver(HEVD) Windows Driver Exploitation Series on Lamprey Labs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under the GNU General Public License v3.0</copyright>
    <lastBuildDate>Wed, 11 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lampreylabs.com/series/hacksys-extreme-vulnerable-driverhevd-windows-driver-exploitation-series/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hacksys Extreme Vulnerable Driver(HEVD) Windows Driver Exploitation - Stack Buffer Overflow</title>
      <link>https://lampreylabs.com/posts/2023/01/hacksys-extreme-vulnerable-driverhevd-windows-driver-exploitation-stack-buffer-overflow/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lampreylabs.com/posts/2023/01/hacksys-extreme-vulnerable-driverhevd-windows-driver-exploitation-stack-buffer-overflow/</guid>
      <description>Table of Contents  Brief Vulnerability Exploitation and Stabilization  Case I: Intel OS Guard/SMEP not present, KVA Shadow/KPTI disabled   Patch Analysis Honourable Mention  Brief The vulnerability class in question that we are going to hunt for and exploit is a Stack Buffer Overflow in HEVD.sys Windows driver compiled without stack cookie/canary(/GS Buffer Security Check) or StackGuard mitigation. We are also going to look at productization and stabilization of the exploit later on.</description>
    </item>
    
  </channel>
</rss>
